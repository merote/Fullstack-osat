{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","props","onChange","value","newFilter","PersonForm","onSubmit","event","preventDefault","addContact","name","changeName","number","changeNumber","type","Persons","persons","filter","a","toLowerCase","includes","map","person","index","key","onClick","window","confirm","removeContact","id","baseUrl","axios","get","newObject","post","url","console","log","delete","put","Notification","message","text","className","failure","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewFilter","alertMessage","setAlertMessage","useEffect","personService","then","response","data","handleAlert","alert","alerts","setTimeout","updateContact","id_target","personObject","catch","error","target","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bc8168d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      filter shown with: <input\r\n        onChange={props.onChange}\r\n        value={props.newFilter}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={event => {\r\n      event.preventDefault()\r\n      props.addContact()\r\n    }}>\r\n      <div>\r\n        name: <input\r\n          value={props.name}\r\n          onChange={props.changeName} />\r\n      </div>\r\n      <div>\r\n        number: <input\r\n          value={props.number}\r\n          onChange={props.changeNumber} />\r\n      </div>\r\n      <button type=\"submit\">add</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm;","import React from 'react'\r\n\r\n\r\nconst Persons = (props) => {\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {props.persons.filter(a => a.name.toLowerCase().includes(props.newFilter.toLowerCase()))\r\n          .map((person, index) => \r\n          <tr key={index}>\r\n            <td>{person.name}</td>\r\n            <td>{person.number}</td>\r\n            <td><button type=\"button\" \r\n                onClick = {() => window.confirm(`delete ${person.name}`) ? props.removeContact(person.id, person.name): null }>\r\n              delete</button></td>\r\n          </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const url = `${baseUrl}/${id}`\r\n  console.log(url)\r\n  return axios.delete(url)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nexport default {getAll, create, remove, update}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter.js'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport personService from './services/persons'\r\nimport './index.css'\r\n\r\nconst Notification = ({ message }) => {    \r\n  if (message.text === null) { \r\n    return null\r\n  }\r\n  console.log(message)\r\n  return (\r\n    <div className={message.failure ? \"alertFailure\" : \"alert\"}>\r\n      {message.text}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [alertMessage, setAlertMessage] = useState({text: null, failure: false})\r\n\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(response => {\r\n        setPersons(response.data)\r\n      })\r\n  }, [])\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n  \r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const handleAlert = (alert, name) => {\r\n    const alerts = [`Added ${newName}`, `Removed ${name}`, `Updated number of ${newName}`,\r\n    `Information of ${newName} has already been removed from server`]\r\n\r\n    switch (alert) {\r\n      case \"ADD\":\r\n        setAlertMessage({text: alerts[0], failure: false})\r\n        break;\r\n      case \"REMOVE\":\r\n        setAlertMessage({text: alerts[1], failure: false})\r\n        break;\r\n      case \"UPDATE\":\r\n        setAlertMessage({text: alerts[2], failure: false})\r\n        break;\r\n      case \"REMOVED_ALREADY\":\r\n        setAlertMessage({text: alerts[3], failure: true})\r\n        break;\r\n      default:\r\n        break;    \r\n    }\r\n    setTimeout(() => {\r\n      setAlertMessage({text: null, failure: false})\r\n    }, 3000)\r\n  }   \r\n\r\n  const addContact = () => {    \r\n\r\n    if (persons.map(a => a.name).includes(newName)) {\r\n      const sameName = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`) \r\n        if (sameName === true)  {\r\n          updateContact()\r\n      }\r\n    } else {   \r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }  \r\n    personService\r\n      .create(personObject)\r\n      .then(response => {\r\n        setPersons(persons.concat(response.data))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          handleAlert('ADD')\r\n \r\n      })\r\n      .catch(error => {\r\n        console.log('fail')\r\n      })\r\n    }\r\n  }\r\n    \r\n  const removeContact = (id, name) => {\r\n    personService\r\n      .remove(id)\r\n      .then(response => {       \r\n        setPersons([...persons.filter(a => a.id !== id)])\r\n        handleAlert('REMOVE', name)         \r\n      })\r\n      .catch(error => {\r\n        console.log('fail')\r\n      })    \r\n  }  \r\n    \r\n   const updateContact = () => {\r\n    const id_target = persons.filter(a => a.name === newName)[0].id\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n      id: id_target\r\n    }\r\n\r\n    personService\r\n      .update(id_target, personObject)\r\n      .then(response => {\r\n        setPersons(persons.map(a => a.id !== id_target ? a : personObject))\r\n        setNewName('')\r\n        setNewNumber('')\r\n        handleAlert('UPDATE')\r\n      })\r\n      .catch(error => {\r\n        handleAlert(\"REMOVED_ALREADY\")\r\n      }) \r\n   } \r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification message={alertMessage} />\r\n      <Filter value={newFilter} onChange={handleFilterChange}></Filter>\r\n      <h2>Add new</h2>\r\n      <PersonForm name={newName} changeName={handleNameChange}\r\n        number={newNumber} changeNumber={handleNumberChange}\r\n        addContact={addContact} filter={newFilter} persons={persons}\r\n        updateContact={updateContact}>\r\n      </PersonForm>\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} newFilter={newFilter}\r\n        removeContact = {removeContact}></Persons>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}